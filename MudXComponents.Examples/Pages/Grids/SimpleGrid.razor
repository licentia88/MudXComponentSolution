@page "/Grids/SImpleGrid"

@inherits MudGridX<USERS>

@code{}

<MudGridX
        SmartCrud="true"
        EnableModelValidation="true"
        EnableSearch="true"
        EnablePagination="true"
        OnCreate="@CreateCommand"
        OnDelete="@DeleteCommand"
        OnUpdate="@UpdateCommand"
        OnLoad="@OnLoad"
        TModel="USERS"
        DataSource="@DataSource"
        Title="@Title">

    <HeaderButtons >
        <GridFabButton Title="Yeni Kullanici"
                       ViewState="ViewState.Create"
                       Color="Color.Tertiary"
                       PageSize="MaxWidth.Medium"
                       StartIcon="@Icons.Filled.Add"
                       TModel="USERS"/>


        <GridFabButton 
            OnClick="() =>  CustomCommand()"
            Color="Color.Tertiary" Style="margin-left:5px"
                       StartIcon="@Icons.Custom.FileFormats.FileMusic"
                       TModel="DummyModel" />
 
    </HeaderButtons>

    <GridColumns>
        <GridColumn 
                    BindingType="string"
                    Order="1" 
                    xs="12" sm="12" md="12" lg="5" xl="5" xxl="5"
                    TModel="USERS"
                    BindingField="@(nameof(USERS.U_NAME))"
                    Label="Name" />

        <GridSpacer TModel="USERS" 
                    Order="2"  
                    xs="12" sm="12" md="2" lg="2" xl="2" xxl="2"/>

        <GridColumn
            BindingType="string"
            Order="3"
            xs="12" sm="12" md="12" lg="5" xl="5" xxl="5"
            TModel="USERS" BindingField="@(nameof(USERS.U_SURNAME))" Label="Surname" />
        
        <GridSelect
            Class="mt-5"
            Order="3"
            xs="12" sm="12" md="12" lg="6" xl="6" xxl="6"
            TModel="USERS"
            TSourceModel="COUNTRIES"
            DataSource="@countries"
            Dense="true"
            Placeholder="Seciniz"
            BindingField="@(nameof(USERS.U_COUNTRY_CODE))"
            TextField="@(nameof(COUNTRIES.C_CODE))"
            ValueField="@(nameof(COUNTRIES.C_DESC))"
            Label="Country" />
        
        <GridSpacer TModel="USERS" 
                    Order="2"  
                    xs="12" sm="12" md="6" lg="6" xl="6" xxl="6"/>
        
        
       <GridColumn
                    BindingType="string"
                    Order="3"
                    xs="12" sm="12" md="12" lg="12" xl="12" xxl="12"
                    Lines="3"
                    TModel="USERS" BindingField="@(nameof(USERS.U_DESCRIPTION))" Label="Description" />
        
    </GridColumns>

    <GridButtons>
        <GridFabButton
                       Title="Opened in edit mode"
                       PageSize="MaxWidth.ExtraExtraLarge"
                       ViewState="ViewState.Update"
                       Color="Color.Tertiary"
                       StartIcon="@Icons.Filled.Edit"
                       TModel="USERS" />

        <GridFabButton  
                       ViewState="ViewState.Remove"
                       Color="Color.Tertiary"
                       StartIcon="@Icons.Filled.Delete"
                       TModel="USERS" />
    </GridButtons>
    <DetailGrid>
        <MudTabs Class="pt-1 pb-2">
            <MudTabPanel Text="Orders">
                <OrdersGrid   />
            </MudTabPanel>
             
        </MudTabs>
    </DetailGrid>
</MudGridX>

@code{

    public List<COUNTRIES> countries { get; set; }

    protected override Task OnInitializedAsync()
    {
        DataSource = new System.Collections.ObjectModel.ObservableCollection<USERS>();

        countries = new List<COUNTRIES>
            {
                new (){ C_CODE = "CY", C_DESC = "Cyprus"},
                new (){ C_CODE = "CountryCode", C_DESC = "Description"},

            };
        return base.OnInitializedAsync();
    }

    public Task CreateCommand(USERS model)
    {
        DataSource.Add(model);
        return Task.CompletedTask;
    }

    public Task UpdateCommand(USERS model)
    {
        DataSource.UpdateCollection(model);
        return Task.CompletedTask;
    }

    public Task DeleteCommand(USERS model)
    {
        DataSource.RemoveFromCollection(model);
        return Task.CompletedTask;
    }

    public async Task CustomCommand()
    {
        //await ShowDialogAsync<MudXPage<DummyModel>>(MaxWidth.Small);

        await ShowDialogAsync<MudXPage<DummyModel>>(MaxWidth.Small,("ViewModel", new DummyModel()));

    }

    public async Task OnLoad(MudXPage<USERS> page)
    {
        Console.WriteLine();
    }
}