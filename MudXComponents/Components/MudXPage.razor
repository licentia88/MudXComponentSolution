@typeparam TModel where TModel : new()

@inherits UIMudBase<TModel>



@{ if (ViewModel is null) return;}


<EditForm Model="@ViewModel" OnValidSubmit="()=>OnSubmit.InvokeAsync(CreateArgs)">
   
    <MudDialog DefaultFocus="DefaultFocus.Element" OnBackdropClick="Close">
        <DialogContent>

            @{
                if (EnableModelValidation)
                {
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                }
            }
            <MudContainer Style="max-height: 80vh; overflow-y: auto ">
                @{

                    <MudGrid Justify="Justify.FlexStart" Spacing="0">

                        @{
                            if (Components is not null)
                            {
                                @foreach (var component in Components.Where(x => x is not IButton))
                                {
                                    
                                    <MudItem xs="component.xs"
                                             sm="component.sm"
                                             md="component.md"
                                             lg="component.lg"
                                             xl="component.xl"
                                             xxl="component.xxl">
                                        @{
                                            if (component.VisibleOnEdit)
                                            {
                                               @component.RenderComponent(ViewModel, ComponentTypes.Form)
                                            }
                                        }
                                    </MudItem>
                                }
                            }
                        }

                    </MudGrid>

                    if (SmartCrud && DetailGrid is not null )
                    {
                        <div class="pb-5">
                            <CascadingValue Value="ViewModel" Name="@(nameof(MudGridX<TModel>.ParentContext))">
                                <CascadingValue Value="true" Name="@(nameof(MudGridX<TModel>.IsChild))">
                                    <CascadingValue Value="@SmartCrud" Name="@(nameof(MudGridX<TModel>.SmartCrud))">
                                         <CascadingValue Value="@CacheKey" Name="@(nameof(MudGridX<TModel>.CacheKey))">
                                                 <CascadingValue Value="@TopLevel" Name="@(nameof(MudGridX<TModel>.TopLevel))">
                                                      @DetailGrid(ViewModel)
                                                  </CascadingValue>                                  
                                             </CascadingValue>
                                            </CascadingValue>

                                </CascadingValue>
                            </CascadingValue>
                        </div>
                    }


                }
            </MudContainer>


        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Close">@CancelText</MudButton>
            <MudButton Color="Color.Success" Variant="Variant.Filled" ButtonType="MudBlazor.ButtonType.Submit" >@SubmitText</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>


