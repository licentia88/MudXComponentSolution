@typeparam TModel        where TModel : new()

@inherits ColumnBase<TModel>

@if (Context is null) { return; }

@{
    if (ComponentType == ComponentTypes.Grid)
    {
        var isChecked = (bool)Context.GetPropertyValue(BindingField);

        if (isChecked)
        {
            @(TrueText ?? isChecked.ToString())
        }
        else
        {
            @(FalseText ?? isChecked.ToString())
        }

    }
    else
    {
        var value = Context.GetPropertyValue(BindingField);

        var isChecked = (bool)(value??false);

        <MudCheckBox T="bool" Class="@Class"
                     CheckedChanged="OnValueChanged"
                     Style="@Style"
                     Dense="@Dense"
                     Disabled="@Disabled" 
                     Error="@Error"
                     ErrorId="@ErrorId"
                     ErrorText="@ErrorText"
                     Label="@Label"
                     LabelPosition="@LabelPosition"
                     Checked="@isChecked"
                     Color="@Color"
                     Required="@Required"
                     RequiredError="@RequiredError"

                     ReadOnly="@ReadOnly"
                     KeyboardEnabled="@KeyboardEnabled"
                     Size="@Size"
                     StopClickPropagation="@StopClickPropagation"
                     TriState="false"
                     UnCheckedColor="@UnCheckedColor"
                     Validation="@Validation"
                     Culture="@Culture" />

    }

}